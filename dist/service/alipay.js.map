{"version":3,"sources":["../../server/service/alipay.js"],"names":["AlipaySdk","require","default","alipaySdk","url","config","alipay","URL","appId","APPID","privateKey","fs","readFileSync","__dirname","alipayPublicKey","format","FORMAT","charset","CHARSET","signType","SIGN_TYPE","timestamp","TIMESTAMP","version","VERSION","auth_url","Redirect_uri","getAccessToken","auth_code","console","log","exec","grantType","code","validateSign","result","getUserInfo","access_token","auth_token"],"mappings":";;;;;;;;;;;;;;;AACA;;;;AACA;;AACA;;;;;;AAHA,IAAMA,YAAYC,QAAQ,YAAR,EAAsBC,OAAxC;;AAIA,IAAMC,YAAY,IAAIH,SAAJ,CAAc;AAC5BI,SAAKC,iBAAOC,MAAP,CAAcC,GADS;AAE5BC,WAAOH,iBAAOC,MAAP,CAAcG,KAFO;AAG5BC,gBAAYC,aAAGC,YAAH,CAAgB,mBAAQC,SAAR,EAAkB,0CAAlB,CAAhB,EAA+E,OAA/E,CAHgB;AAI5BC,qBAAiBH,aAAGC,YAAH,CAAgB,mBAAQC,SAAR,EAAkB,4CAAlB,CAAhB,EAAiF,OAAjF,CAJW;AAK5BE,YAAQV,iBAAOC,MAAP,CAAcU,MALM;AAM5BC,aAASZ,iBAAOC,MAAP,CAAcY,OANK;AAO5BC,cAAUd,iBAAOC,MAAP,CAAcc,SAPI;AAQ5BC,eAAWhB,iBAAOC,MAAP,CAAcgB,SARG;AAS5BC,aAASlB,iBAAOC,MAAP,CAAckB;AATK,CAAd,CAAlB;;AAYA,IAAMC,WAAU,sEAAsEpB,iBAAOC,MAAP,CAAcG,KAApF,sCAA8HJ,iBAAOC,MAAP,CAAcoB,YAA5J;;AAEA,IAAMC;AAAA,wFAAgB,iBAAOC,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEdC,gCAAQC,GAAR,CAAYF,SAAZ,EAAsB,OAAtB;AAFc;AAAA,+BAGOzB,UAAU4B,IAAV,CAAe,2BAAf,EAA4C;AACjEC,uCAAW,oBADsD;AAEjEC,kCAAML;AAF2D,yBAA5C,EAGlB;AACCM,0CAAc,IADf;AAECJ,iCAAK;AAFN,yBAHkB,CAHP;;AAAA;AAGRK,8BAHQ;;AAUdN,gCAAQC,GAAR,CAAYK,MAAZ;AAVc,yDAWPA,MAXO;;AAAA;AAAA;AAAA;;AAaVN,gCAAQC,GAAR;;AAbU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAAA;AAAA;AAAA;AAAA,GAAN;;AAiBA,IAAMM;AAAA,yFAAc,kBAAOC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAEZR,gCAAQC,GAAR,CAAYO,YAAZ,EAAyB,MAAzB;AAFY;AAAA,+BAGSlC,UAAU4B,IAAV,CAAe,wBAAf,EAAyC;AAC9DO,wCAAYD;AADkD,yBAAzC,EAElB;AACCH,0CAAc,IADf;AAECJ,iCAAK;AAFN,yBAFkB,CAHT;;AAAA;AAGNK,8BAHM;;AASZN,gCAAQC,GAAR,CAAYK,MAAZ;AATY,0DAULA,MAVK;;AAAA;AAAA;AAAA;;AAYRN,gCAAQC,GAAR;;AAZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAd;;AAAA;AAAA;AAAA;AAAA,GAAN;;QAiBIL,Q,GAAAA,Q;QACAE,c,GAAAA,c;QACAS,W,GAAAA,W","file":"alipay.js","sourcesContent":["const AlipaySdk = require('alipay-sdk').default\r\nimport fs from 'fs'\r\nimport { resolve }from 'path'\r\nimport config  from '../config'\r\nconst alipaySdk = new AlipaySdk({\r\n    url: config.alipay.URL,\r\n    appId: config.alipay.APPID,\r\n    privateKey: fs.readFileSync(resolve(__dirname,'../config/key/alipay/rsa_private_key.pem'), 'utf-8'),\r\n    alipayPublicKey: fs.readFileSync(resolve(__dirname,'../config/key/alipay/alipay_public_key.pem'), 'ascii'),\r\n    format: config.alipay.FORMAT,\r\n    charset: config.alipay.CHARSET,\r\n    signType: config.alipay.SIGN_TYPE,\r\n    timestamp: config.alipay.TIMESTAMP,\r\n    version: config.alipay.VERSION\r\n})\r\n\r\nconst auth_url= `https://openauth.alipay.com/oauth2/publicAppAuthorize.htm?app_id=` + config.alipay.APPID +`&scope=auth_user&redirect_uri=` + config.alipay.Redirect_uri\r\n\r\nconst getAccessToken =async (auth_code)=>{\r\n    try {\r\n        console.log(auth_code,1111222)\r\n        const result = await alipaySdk.exec('alipay.system.oauth.token', {\r\n        grantType: 'authorization_code',\r\n        code: auth_code\r\n        }, {\r\n            validateSign: true,\r\n            log: null,\r\n        });\r\n        console.log(result);\r\n        return result\r\n    } catch (err) {\r\n            console.log(err)\r\n    }\r\n}\r\n\r\nconst getUserInfo = async (access_token) => {\r\n    try {\r\n        console.log(access_token,333333)\r\n        const result = await alipaySdk.exec('alipay.user.info.share', {\r\n        auth_token: access_token\r\n        }, {\r\n            validateSign: true,\r\n            log: null,\r\n        });\r\n        console.log(result);\r\n        return result\r\n    } catch (err) {\r\n            console.log(err)\r\n    }\r\n}\r\n\r\nexport{\r\n    auth_url,\r\n    getAccessToken,\r\n    getUserInfo\r\n}"]}