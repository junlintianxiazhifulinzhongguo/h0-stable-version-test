{"version":3,"sources":["../server/app.js"],"names":["app","Koa","router","Router","debug","require","port","process","env","PORT","config","use","routes","allowedMethods","ctx","next","start","Date","ms","console","log","method","url","get","body","on","err","logger","error","module","exports","listen"],"mappings":";;;;;;;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AAEA;;;;AACA;;;;AACA;;;;AAZA,IAAMA,MAAM,IAAIC,aAAJ,EAAZ;AACA,IAAMC,SAAS,IAAIC,mBAAJ,EAAf;;AAMA,IAAMC,QAAQC,QAAQ,OAAR,EAAiB,aAAjB,CAAd;;AAMA,IAAMC,OAAOC,QAAQC,GAAR,CAAYC,IAAZ,IAAoBC,iBAAOJ,IAAxC;;AAGA,0BAAQN,GAAR;;AAGAA,IAAIW,GAAJ,CAAQ,8BAAR,EACGA,GADH,CACO,wBADP,EAEGA,GAFH,CAEO,0BAFP,EAGGA,GAHH,CAGOT,OAAOU,MAAP,EAHP,EAIGD,GAJH,CAIOT,OAAOW,cAAP,EAJP;;AAOAb,IAAIW,GAAJ;AAAA,wEAAQ,iBAAOG,GAAP,EAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACAC,iBADA,GACQ,IAAIC,IAAJ,EADR;AAAA;AAAA,mBAEAF,MAFA;;AAAA;AAGAG,cAHA,GAGK,IAAID,IAAJ,KAAaD,KAHlB;;AAING,oBAAQC,GAAR,CAAeN,IAAIO,MAAnB,SAA6BP,IAAIQ,GAAjC;;AAJM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAR;;AAAA;AAAA;AAAA;AAAA;;AAOApB,OAAOqB,GAAP,CAAW,GAAX,EAAgB,UAACT,GAAD,EAAMC,IAAN,EAAe;AAC7BD,MAAIU,IAAJ,GAAW,aAAX;AACD,CAFD;;AAIA,sBAAOtB,MAAP;AACAF,IAAIyB,EAAJ,CAAO,OAAP,EAAgB,UAACC,GAAD,EAAMZ,GAAN,EAAc;AAC5BK,UAAQC,GAAR,CAAYM,GAAZ;AACAC,sBAAOC,KAAP,CAAa,cAAb,EAA6BF,GAA7B,EAAkCZ,GAAlC;AACD,CAHD,EAKC,2DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACM,oBADN;;AAAA;AAEAK,kBAAQC,GAAR,CAAY,KAAZ;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAD;AAIDS,OAAOC,OAAP,GAAiB9B,IAAI+B,MAAJ,CAAWrB,iBAAOJ,IAAlB,EAAwB,YAAM;AAC7Ca,UAAQC,GAAR,oCAA6CV,iBAAOJ,IAApD;AACD,CAFgB,CAAjB","file":"app.js","sourcesContent":["\nimport Koa from \"koa\"\nimport Router from'koa-router'\nconst app = new Koa()\nconst router = new Router()\n\nimport json from 'koa-json'\nimport onerror from 'koa-onerror'\nimport bodyparser from 'koa-bodyparser'\nimport logger from 'koa-logger'\nconst debug = require('debug')('koa2:server')\nimport path from 'path'\n\nimport config from './config'\nimport routes from './routes'\nimport { connect } from './database/init'\nconst port = process.env.PORT || config.port\n\n// error handler\nonerror(app)\n\n// middlewares\napp.use(bodyparser())\n  .use(json())\n  .use(logger())\n  .use(router.routes())\n  .use(router.allowedMethods())\n\n// logger\napp.use(async (ctx, next) => {\n  const start = new Date()\n  await next()\n  const ms = new Date() - start\n  console.log(`${ctx.method} ${ctx.url} - $ms`)\n})\n\nrouter.get('/', (ctx, next) => {\n  ctx.body = 'Hello World'\n})\n\nroutes(router)\napp.on('error', (err, ctx) => {\n  console.log(err)\n  logger.error('server error', err, ctx)\n})\n\n;(async () => {\n  await connect()\n  console.log('wwo')\n})()\nmodule.exports = app.listen(config.port, () => {\n  console.log(`Listening on http://localhost:${config.port}`)\n})\n"]}